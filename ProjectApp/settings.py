"""
Django settings for ProjectApp project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Medya dosyalarının yüklenmesi ve sunulması için gerekli ayarlar
MEDIA_URL = '/media/'  # URL üzerinden erişilecek olan medya dosyaları için temel yol.
MEDIA_ROOT = BASE_DIR / 'media'  # Dosyaların kaydedileceği dizin.



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&f8e2-ccm7%kdga0dijdyp3#h1g(_ppkdighy#^t5g2z-8b60j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #Yeni eklenenler(BY)
    'projectCreater',
    'rest_framework',  # Django Rest Framework (DRF) ile RESTful API'ler oluşturmak için kullanılır.
    'knox',  # Daha güvenli ve uzun ömürlü token tabanlı kimlik doğrulama sağlar.
    'accounts',  # Özel kullanıcı modeli ve kimlik doğrulama işlemleri için projeye özgü bir uygulama.
    'rest_framework.authtoken',
    'corsheaders',  # Farklı domainlerden gelen istekleri yönetmek için CORS desteği sağlar.
    'rest_framework_simplejwt.token_blacklist',
]

#models.py dekini aktif etmek için,
#AUTH_USER_MODEL = 'accounts.CrudUser'



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#CORS_ALLOW_ALL_ORIGINS = True  # Tüm domainlerden gelen istekleri kabul eder. Geliştirme için uygundur, ancak production ortamında güvenlik riski oluşturabilir.

CORS_ALLOWED_ORIGINS = [
    'http://127.0.0.1:8000',  # Postman veya frontend'inizin çalıştığı adres
]

ROOT_URLCONF = 'ProjectApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ProjectApp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

KNOX_TOKEN_TTL = None  # Tokenların geçerlilik süresi
KNOX_TOKEN_LIMIT_PER_USER = 10  # Kullanıcı başına maksimum token sayısı (isteğe bağlı)
KNOX_REVOKE_TOKENS_ON_LOGOUT = True  # Kullanıcı çıkış yaparsa tokenları geçersiz kılar

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.BasicAuthentication',  # Kullanıcı adı ve şifre ile temel kimlik doğrulama (genellikle dev/test için)
        # 'rest_framework.authentication.SessionAuthentication',  # Django'nun oturum tabanlı kimlik doğrulaması (genellikle admin paneli için)
        'knox.auth.TokenAuthentication',  # Knox kullanarak güvenli token tabanlı kimlik doğrulama sağlar.
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
